---
# Source: ksync/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ksync
  namespace: default
  labels:
    helm.sh/chart: ksync-0.1.0
    app.kubernetes.io/name: ksync
    app.kubernetes.io/instance: ksync
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
---
# Source: ksync/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ksync
  namespace: default
data:
  config.yaml: |
    ksync:
      kubeClient:
        rateLimit:
          burst: 10
          enabled: false
          qps: 5
      leaderElection:
        lease:
          expiration: 10s
          expiryToleration: 10s
          renewTimeout: 3s
          retryInterval: 1s
        lock:
          type: leases
      log:
      - file: stderr
        format: console
        level: debug
      metrics:
        enabled: true
        httpPath: /metrics
        listen: :9876
      namespaced: true
---
# Source: ksync/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ksync
  namespace: default
rules:
- apiGroups: ["apps"]
  resources:
  - deployments
  - statefulsets
  - daemonsets
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups: ["apps"]
  resources:
  - replicasets
  verbs:
  - get
  - list
- apiGroups: [""]
  resources:
  - configmaps
  - secrets
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups: [""]
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - delete
---
# Source: ksync/templates/rbac.yaml
# role for leader election
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ksync:leader-election
  namespace: default
rules:
- apiGroups: [""]
  resources:
  - events
  verbs:
  - create
- apiGroups: ["coordination.k8s.io"]
  resources:
  - leases
  verbs:
  - get
  - update
  resourceNames:
  - ksync-leader-election
---
# Source: ksync/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ksync
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ksync
subjects:
- kind: ServiceAccount
  name: ksync
  namespace: default
---
# Source: ksync/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ksync:leader-election
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ksync:leader-election
subjects:
- kind: ServiceAccount
  name: ksync
  namespace: default
---
# Source: ksync/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ksync-metrics
  namespace: default
  labels:
    app.kubernetes.io/component: metrics
    helm.sh/chart: ksync-0.1.0
    app.kubernetes.io/name: ksync
    app.kubernetes.io/instance: ksync
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: metrics
    port: 9876
    targetPort: metrics
  selector:
    app.kubernetes.io/name: ksync
    app.kubernetes.io/instance: ksync
---
# Source: ksync/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ksync
  namespace: default
  labels:
    helm.sh/chart: ksync-0.1.0
    app.kubernetes.io/name: ksync
    app.kubernetes.io/instance: ksync
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ksync
      app.kubernetes.io/instance: ksync
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ksync
        app.kubernetes.io/instance: ksync
    spec:
      serviceAccountName: ksync
      securityContext:
        {}
      volumes:
        - name: config
          configMap:
            name: ksync
      containers:
        - name: ksync
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: "docker.io/arhatdev/ksync:latest"
          imagePullPolicy: IfNotPresent
          command:
          - /ksync
          - -c
          - /etc/ksync/config.yaml
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: config
              mountPath: /etc/ksync/config.yaml
              subPath: config.yaml
          ports:
            - name: metrics
              containerPort: 9876
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
