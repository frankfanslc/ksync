service:
  prepare:
  - export CGO_ENABLED=0
  - export GOOS=$(go env GOHOSTENV)
  - export GOARCH=$(go env GOHOSTARCH)

run:
  deadline: 3m
  tests: true
  modules-download-mode: readonly
  skip-dirs-use-default: true
  skip-dirs:
  - cmd
  - benchmark
  build-tags: []

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  sort-results: true

linters:
  disable-all: true
  enable:
  - golint
  - errcheck
  - misspell
  - deadcode
  - govet
  - typecheck
  - lll
  - megacheck
  - varcheck
  - unconvert
  - bodyclose
  - scopelint
  - goimports
  - ineffassign
  - gofmt
  - maligned
  - goconst
  - gocyclo
  - unparam
  - structcheck
  - staticcheck
  - gocritic

linters-settings:
  govet:
    check-shadowing: true
  golint:
    min-confidence: 0
  misspell:
    locale: US
  unused:
    check-exported: false
  gocyclo:
    min-complexity: 40
  goimports:
    local-prefixes: github.com/goiiot/libmqtt
  lll:
    line-length: 120
    # tab width in spaces. Default to 1.
    tab-width: 4
  maligned:
    suggest-new: true

issues:
  exclude-rules:
  - path: _test\.go
    linters:
    - gocyclo
    - errcheck
    - dupl
    - gosec
    - maligned
    - lll
    - scopelint
  - text: "string `MQTT` has 11 occurrences"
    linters:
    - goconst

  - text: "don't use underscores in Go names; func initTestData_"
    linters:
    - golint
  - text: "string `<nil>` has"
    linters:
    - goconst

  - text: "commentFormatting: put a space between `//` and comment text"
    linters:
    - gocritic
